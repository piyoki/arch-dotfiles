# Helper
# Command 'set' is used to get an option which can be boolean, integer, or string
# Command 'cmd' is used to define a custom command
# Command 'map' is used to bind a key to a command which can be builtin command, custom command, or shell command

# Basic Settings
set hidden true
set ignorecase true
set icons true
set drawbox true
set sortby time
set ratios 1:2:3
set cleaner ~/.config/lf/cleaner
set previewer ~/.config/lf/preview
set autoquit true
set reverse true

# Custom Functions
cmd mkdir ${{
  printf "Directory Name: "
  read ans
  mkdir $ans
}}

cmd mkfile ${{
  printf "File Name: "
  read ans
  $EDITOR $ans
}}

cmd setwallpaper ${{
    cp "$f" ~/.config/wall.jpg
    xwallpaper --zoom "$f"
    betterlockscreen -u "$f" --fx
}}

# Archive bindings
cmd unarchive ${{
  case "$f" in
      *.zip) unzip "$f" ;;
      *.tar.gz) tar -xzvf "$f" ;;
      *.tar.bz2) tar -xjvf "$f" ;;
      *.tar) tar -xvf "$f" ;;
      *) echo "Unsupported format" ;;
  esac
}}

# Trash bindings
cmd trash ${{
  files=$(printf "$fx" | tr '\n' ';')
  while [ "$files" ]; do
    file=${files%%;*}

    trash-put "$(basename "$file")"
    if [ "$files" = "$file" ]; then
      files=''
    else
      files="${files#*;}"
    fi
  done
}}

cmd restore_trash ${{
  trash-restore
}}

# FZF bindings
cmd fzf_jump ${{
    res="$(find . -maxdepth 1 | fzf --reverse --header='Jump to location' | sed 's/\\/\\\\/g;s/"/\\"/g')"
    if [ -d "$res" ] ; then
        cmd="cd"
    elif [ -f "$res" ] ; then
        cmd="select"
    else
        exit 0
    fi
    lf -remote "send $id $cmd \"$res\""
}}

cmd fzf_search ${{
    res="$( \
        RG_PREFIX="rg --column --line-number --no-heading --color=always --hidden -g '!*.git*' \
            --smart-case "
        FZF_DEFAULT_COMMAND="$RG_PREFIX ''" \
            fzf --bind "change:reload:$RG_PREFIX {q} || true" \
            --ansi --layout=reverse --header 'Search in files' \
            | cut -d':' -f1
    )"
    [ ! -z "$res" ] && lf -remote "send $id select \"$res\""
}}

# zoxide (z)
cmd z %{{
  result="$(zoxide query --exclude $PWD $@)"
  lf -remote "send $id cd $result"
}}

cmd zi ${{
  result="$(zoxide query -i)"
  lf -remote "send $id cd $result"
}}

# du (disk usage)
cmd usage $du -h -d1 | less

# Bindings
# Remove some defaults
map m
map o
map n
map "'"
map '"'
map d
map <enter>

# map c $vscodium "$f"

map au unarchive
map n $nvim $f
map e $nvim $f

# Basic Functions
map . set hidden!
map dd trash
map dr restore_trash
map dD delete
map p paste
map x cut
map y copy
map r :rename; cmd-home
map <enter> open
map R reload
map mf mkfile
map md mkdir
map bg setwallpaper
map C clear
map <c-c> quit

# Search
map <c-f> :fzf_jump
map <c-k> :fzf_search

# Movement
map gD cd ~/Documents
map gd cd ~/Downloads
map gP cd ~/Pictures
map gc cd ~/.config
map gr cd ~/repos
map gw cd ~/workspace
map gT cd ~/.local/share/Trash/files
map gt cd ~/Tank
map gm cd ~/Media
map gM cd ~/Minio
map gp cd ~/Pikpak

